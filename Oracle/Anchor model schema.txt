-- TYP_GenreType table
CREATE TABLE TYP_GenreType (
    TYP_ID NUMBER NOT NULL,
    TYP_GenreType VARCHAR2(25) NOT NULL,
    CONSTRAINT pkTYP_GenreType PRIMARY KEY (TYP_ID),
    CONSTRAINT uqTYP_GenreType UNIQUE (TYP_GenreType)
);

-- RTT_RatingType table
CREATE TABLE RTT_RatingType (
    RTT_ID NUMBER NOT NULL,
    RTT_RatingType VARCHAR2(25) NOT NULL,
    CONSTRAINT pkRTT_RatingType PRIMARY KEY (RTT_ID),
    CONSTRAINT uqRTT_RatingType UNIQUE (RTT_RatingType)
);

-- MV_Movie table
CREATE TABLE MV_Movie (
    MV_ID NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    MV_Dummy CHAR(1) NULL,
    CONSTRAINT pkMV_Movie PRIMARY KEY (MV_ID)
);

-- MV_NAM_Movie_Name table
CREATE TABLE MV_NAM_Movie_Name (
    MV_ID NUMBER NOT NULL,
    MV_NAM_Movie_Name VARCHAR2(50) NOT NULL,
    CONSTRAINT fkMV_NAM_Movie_Name FOREIGN KEY (MV_ID) REFERENCES MV_Movie (MV_ID),
    CONSTRAINT pkMV_NAM_Movie_Name PRIMARY KEY (MV_ID)
);

-- MV_GER_Movie_Gerne table
CREATE TABLE MV_GER_Movie_Gerne (
    MV_ID NUMBER NOT NULL,
    TYP_ID NUMBER NOT NULL,
    CONSTRAINT fk_A_MV_GER_Movie_Gerne FOREIGN KEY (MV_ID) REFERENCES MV_Movie (MV_ID),
    CONSTRAINT fk_K_MV_GER_Movie_Gerne FOREIGN KEY (TYP_ID) REFERENCES TYP_GenreType (TYP_ID),
    CONSTRAINT pkMV_GER_Movie_Gerne PRIMARY KEY (MV_ID),
    CONSTRAINT ukMV_GER_Movie_Gerne UNIQUE (MV_ID, TYP_ID)
);

-- MV_ATH_Movie_Author table
CREATE TABLE MV_ATH_Movie_Author (
    MV_ID NUMBER NOT NULL,
    MV_ATH_Movie_Author VARCHAR2(50) NOT NULL,
    CONSTRAINT fkMV_ATH_Movie_Author FOREIGN KEY (MV_ID) REFERENCES MV_Movie (MV_ID),
    CONSTRAINT pkMV_ATH_Movie_Author PRIMARY KEY (MV_ID)
);

-- MV_RAT_Movie_Rating table
CREATE TABLE MV_RAT_Movie_Rating (
    MV_ID NUMBER NOT NULL,
    RTT_ID NUMBER NOT NULL,
    MV_RAT_ChangedAt TIMESTAMP NOT NULL,
    CONSTRAINT fk_A_MV_RAT_Movie_Rating FOREIGN KEY (MV_ID) REFERENCES MV_Movie (MV_ID),
    CONSTRAINT fk_K_MV_RAT_Movie_Rating FOREIGN KEY (RTT_ID) REFERENCES RTT_RatingType (RTT_ID),
    CONSTRAINT pkMV_RAT_Movie_Rating PRIMARY KEY (MV_ID, MV_RAT_ChangedAt),
    CONSTRAINT ukMV_RAT_Movie_Rating UNIQUE (MV_ID, MV_RAT_ChangedAt, RTT_ID)
);

-- Index for historized field MV_RAT_ChangedAt on table MV_RAT_Movie_Rating
CREATE INDEX MV_RAT_Movie_Rating_MV_RAT_ChangedAt_idx ON MV_RAT_Movie_Rating (MV_RAT_ChangedAt);

-- Views (latest perspective)
CREATE OR REPLACE VIEW lMV_RAT_Movie_Rating AS
SELECT DISTINCT MV_ID, RTT_ID, MV_RAT_ChangedAt
FROM MV_RAT_Movie_Rating
ORDER BY MV_ID DESC, MV_RAT_ChangedAt DESC;

CREATE OR REPLACE VIEW lMV_Movie AS
SELECT MV.MV_ID, NAM.MV_NAM_Movie_Name, kGER.TYP_GenreType AS TYP_GenreType,
    GER.TYP_ID, ATH.MV_ATH_Movie_Author, RAT.MV_RAT_ChangedAt,
    kRAT.RTT_RatingType AS RTT_RatingType, RAT.RTT_ID
FROM MV_Movie MV
LEFT JOIN MV_NAM_Movie_Name NAM ON NAM.MV_ID = MV.MV_ID
LEFT JOIN MV_GER_Movie_Gerne GER ON GER.MV_ID = MV.MV_ID
LEFT JOIN TYP_GenreType kGER ON kGER.TYP_ID = GER.TYP_ID
LEFT JOIN MV_ATH_Movie_Author ATH ON ATH.MV_ID = MV.MV_ID
LEFT JOIN lMV_RAT_Movie_Rating RAT ON RAT.MV_ID = MV.MV_ID
LEFT JOIN RTT_RatingType kRAT ON kRAT.RTT_ID = RAT.RTT_ID;
